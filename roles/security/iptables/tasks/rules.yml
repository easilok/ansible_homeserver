- name: Allow loopback connection
  iptables:
    chain: INPUT
    in_interface: lo
    comment: Ansible managed
    jump: ACCEPT

- name: Allow established and related connections
  iptables:
    chain: INPUT
    match: conntrack
    ctstate: ESTABLISHED,RELATED
    comment: Ansible managed
    jump: ACCEPT

- name: Log port scans
  iptables:
    chain: INPUT
    match: conntrack
    ctstate: NEW
    comment: Ansible managed
    jump: LOG
  when: enable_crowdsec | default(False)

- name: Allow SSH
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ security_ssh_port }}"
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
    comment: Ansible managed

- name: Allow current port 22 ssh connection
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 22
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
  when: not enable_endlessh and ansible_ssh_port == "22"

- name: Allow endlessh
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 22
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
    comment: Ansible managed
  when: enable_endlessh | default(False)

- name: Allow HTTP and HTTPS
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_ports:
      - "80"
      - "443"
    jump: ACCEPT
    comment: Ansible managed
  when: (enable_nginx | default(False))
  # when: (enable_bunkerized_nginx | default(False)) or (enable_swag | default(False))

- name: Allow Wireguard
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: 51820
    jump: ACCEPT
    comment: Ansible managed
  when: enable_wireguard | default(False)

- name: Allow Cockpit
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 9090
    source: '192.168.1.0/24'
    jump: ACCEPT
    comment: Ansible managed
  when: enable_virtualization | default(False)

- name: Allow deluge-web
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 8112
    jump: ACCEPT
    comment: Ansible managed
  when: enable_deluge | default(False)

- name: Allow deluge remote connections
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 58846
    jump: ACCEPT
    comment: Ansible managed
  when: enable_deluge | default(False)

- name: Allow deluge incoming port
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: "{{ torrent_listen_port }}"
    jump: ACCEPT
    comment: Ansible managed
  when: enable_deluge | default(False)

- name: Allow minidlna web
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 8200
    jump: ACCEPT
    comment: Ansible managed
  when: enable_minidlna | default(False)

- name: Allow minidlna
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: 1900
    jump: ACCEPT
    comment: Ansible managed
  when: enable_minidlna | default(False)

- name: Allow systemd service manager
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 3000
    jump: ACCEPT
    comment: Ansible managed
  when: enable_systemd_manager | default(False)

- name: Allow samba ports
  when: enable_samba | default(False)
  block:
    - name: "Samba UDP 137 port"
      iptables:
        chain: INPUT
        protocol: udp
        source: '192.168.1.0/24'
        destination_port: 137
        jump: ACCEPT
        comment: Ansible managed
    - name: "Samba UDP 138 port"
      iptables:
        chain: INPUT
        protocol: udp
        source: '192.168.1.0/24'
        destination_port: 138
        jump: ACCEPT
        comment: Ansible managed
    - name: "Samba TCP 139 port"
      iptables:
        chain: INPUT
        protocol: tcp
        source: '192.168.1.0/24'
        destination_port: 139
        jump: ACCEPT
        comment: Ansible managed
    - name: "Samba TCP 445 port"
      iptables:
        chain: INPUT
        protocol: tcp
        source: '192.168.1.0/24'
        destination_port: 445
        jump: ACCEPT
        comment: Ansible managed
