#
# Do not edit this file directly
# Instead, add your customizations to group_vars/your-inventory-name/vars.yml
# For secret variables, use group_vars/your-inventory-name/vault.yml
#

#
# Misc
#
hostname: "{{ inventory_hostname }}"

timezone: Europe/Lisbon

ntp_timezone: "{{ timezone }}"

locale: en_US.UTF-8

keyboard_layout: us

username: luis

guid: "1000"

shell: /bin/bash

docker_dir: /home/docker

dotfiles_repo: https://gitlab.com/easilok/dotfiles

boot_drive_serial: ""

enable_pikvm: false

pikvm_address: pikvm.box

spindown_time: 600 # in seconds

#
# Packages
#
extra_packages:
  - speedtest-cli
  - htop
  - git
  - neofetch
  - neovim
  - tmux
  - rsync
  - lm-sensors
  - iotop
  - iftop
  - ncdu
  - hddtemp
  - reptyr
  - vnstat
  - iptables-persistent

#
# Docker-compose url
#
docker_compose_url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64"

#
# Apt mirrors
#
# version: focal

# apt_mirror: http://ftp.uni-mainz.de/ubuntu/


#
# Email credentials (for SMART and Snapraid error reporting)
#

email: "{{ vault_email }}"

email_login: "{{ vault_email }}"

email_smtp_host: "{{ vault_email_smtp_host }}"

email_smtp_port: "{{ vault_email_smtp_port }}"

email_smtp_port_ssl: "{{ vault_email_smtp_port_ssl }}"

# MSMTP
msmtp_accounts:
- account:   mailbox
  host:      "{{ email_smtp_host }}"
  port:      "{{ email_smtp_port_ssl }}"
  auth:      "on"
  from:      "{{ hostname }}@{{ email.split('@')[1] }}"
  user:      "{{ email }}"
  password:  "{{ email_password }}"

msmtp_default_account: "mailbox"

msmtp_alias_default : "{{ email }}"

msmtp_tls_starttls: 'off'

msmtp_domain: "{{ email.split('@')[1] }}"

#
# SSH (geerlingguy.security)
#
security_ssh_port: 69
# security_ssh_port: 22

# security_sudoers_passwordless: [ "{{ username }}" ]

security_autoupdate_enabled: true
security_autoupdate_reboot: true
security_autoupdate_mail_to: "{{ email }}"
# Set this to false to get email after every package install
security_autoupdate_mail_on_error: true 
security_autoupdate_reboot_time: "01:00"

#
# security_ssh_permit_empty_password: "no"
# security_ssh_x11_forwarding: "no"
# security_ssh_password_authentication: "no"
# security_ssh_permit_root_login: "no"

#
# Enable/disable functionality
#
enable_nas_stuff: true

enable_samba: true

enable_portainer: true

# Home automation

enable_homeassistant: false

# Projects

enable_kanboard: false

enable_wekan: false

enable_gitea: false

# Media

enable_jellyfin: false

enable_photoprism: false

enable_filebrowser: false

# Yo-ho-ho

enable_deluge: true
torrent_listen_port: 50746

enable_sonarr: true

enable_radarr: false

enable_openbooks: false

enable_jackett: true

# Public-facing services

enable_nextcloud: false

# DDNS

enable_ddclient: false

# VPN

enable_wireguard: false

# network bridge

enable_net_bridge: false

# Homepages

enable_homer: true

# Misc

enable_authelia: false

enable_pihole: false

enable_watchtower: true

enable_endlessh: false

enable_registry: true

enable_minidlna: true
  
enable_virtualization: true

#
# Web Server
#

enable_nginx: false

enable_nginx_npm: true

enable_traefik: false

reverse_proxy_net: reverse_proxy_net

#
# System monitoring
#

enable_grafana: true

enable_prometheus: true

enable_systemd_manager: true

#
# Time Machine
#
timemachine_root: /mnt/timemachine

timemachine_drive: /dev/disk/by-label/TimeMachine

enable_timemachine: false

samba_server_string: "{{ hostname }}"

samba_log: "/var/log/samba.log"

samba_users:
  - name: "{{ username }}"
    password: "{{ password }}"
#   - name: "{{ additional_users[0].name }}"
#     password: "{{ password2 }}"

# samba_global_include: global-include.conf

# samba_apple_extensions: yes

samba_mitigate_cve_2017_7494: false

samba_load_homes: yes

samba_log_level: '3 passdb:5 auth:10 winbind:2 '

# samba_server_max_protocol: "SMB3"

# samba_server_min_protocol: "SMB2"

samba_shares:
#   - name: Trash
#     guest_ok: no
#     public: no
#     read_only: no
#     writable: yes
#     owner: "{{ username }}"
#     browseable: yes
#     path: "{{ mergerfs_root }}"
#     valid_users: "{{ username }}"
#     write_list: "{{ username }}"

  - name: Downloads
    guest_ok: no
    public: no
    read_only: no
    writable: yes
    browseable: yes
    owner: "{{ deluge_user }}"
    group: "{{ deluge_group }}"
    # directory_mode: '0777'
    path: "{{ storage_drive }}/downloads"
    valid_users: "{{ username }}"
    write_list: "{{ username }}"

  - name: Series
    guest_ok: no
    public: no
    read_only: no
    writable: yes
    browseable: yes
    owner: "{{ deluge_user }}"
    group: "{{ deluge_group }}"
    # directory_mode: '0777'
    path: "{{ storage_drive }}/series"
    vaid_users: "{{ username }}"
    write_list: "{{ username }}"

  - name: Music
    guest_ok: no
    public: no
    read_only: no
    writable: yes
    browseable: yes
    owner: "{{ deluge_user }}"
    group: "{{ deluge_group }}"
    # directory_mode: '0777'
    path: "{{ storage_drive }}/music"
    vaid_users: "{{ username }}"
    write_list: "{{ username }}"

  - name: Movies
    guest_ok: no
    public: no
    read_only: no
    writable: yes
    browseable: yes
    owner: "{{ deluge_user }}"
    group: "{{ deluge_group }}"
    # directory_mode: '0777'
    path: "{{ storage_drive }}/movies"
    vaid_users: "{{ username }}"
    write_list: "{{ username }}"

  - name: Backups
    guest_ok: no
    public: no
    read_only: no
    writable: yes
    browseable: yes
    # owner: "{{ username }}"
    path: "{{ backups_folder }}"
    vaid_users: "{{ username }}"
    write_list: "{{ username }}"

#   - name: TimeMachine
#     guest_ok: no
#     public: no
#     read_only: no
#     owner: "{{ username }}"
#     vfs_objects:
#       - name: fruit
#         options:
#         - name: time machine
#           value: 'yes'
#       - name: streams_xattr
#     writable: yes
#     browseable: yes
#     path: "{{ timemachine_root }}"
#     valid_users: "{{ username }}"
#     write_list: "{{ username }}"

#
# Backups Folder
#
backups_folder: /mnt/backups

#
# Storage Drive
#
storage_drive: /mnt/stuff

#
# Security
#
enable_crowdsec: false

enable_iptables: true

enable_fail2ban: true

# We have our own f2b rules
security_fail2ban_enabled: true

### BEGIN Secret variables (encrypt and put into vault.yml)
email_password: '{{ vault_email_password }} '
host: ''
host_local: '{{ vault_host_local }}'
password: "{{ vault_user_password }}"
photoprism_password: ''
pihole_password: ''
pikvm_password: ''
ssh_public_key: ''
vpn_host: ''
vpn_password: ''
### END Secret variables (encrypt and put into vault.yml)l
